//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Mar 13 11:31:35 2014 (1394735495)
// Cuda compilation tools, release 6.0, V6.0.1
//

.version 4.0
.target sm_30, debug
.address_size 64

	.file	1 "/data/gpli/heterogenous-ep/memory/lud/sass/lud.cu", 1443463115, 3225
	.file	2 "/data/gpli/heterogenous-ep/memory/lud/sass/lud_kernel.cu", 1443463180, 5481
	.file	3 "/usr/local/cuda/bin/../targets/x86_64-linux/include/device_functions.h", 1396369760, 317649
	.file	4 "/usr/local/cuda/bin/../targets/x86_64-linux/include/vector_types.h", 1396369760, 12619
// _ZZ12lud_diagonalPfiiE6shadow has been demoted
// _ZZ13lud_perimeterPfiiE3dia has been demoted
// _ZZ13lud_perimeterPfiiE8peri_row has been demoted
// _ZZ13lud_perimeterPfiiE8peri_col has been demoted
// _ZZ12lud_internalPfiiE8peri_row has been demoted
// _ZZ12lud_internalPfiiE8peri_col has been demoted
.global .align 1 .b8 $str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90, 0};

.visible .entry _Z12lud_diagonalPfii(
	.param .u64 _Z12lud_diagonalPfii_param_0,
	.param .u32 _Z12lud_diagonalPfii_param_1,
	.param .u32 _Z12lud_diagonalPfii_param_2
)
{
	.reg .pred 	%p<15>;
	.reg .s32 	%r<56>;
	.reg .f32 	%f<19>;
	.reg .s64 	%rd<80>;
	.reg .f64 	%fd<3>;
	// demoted variable
	.shared .align 4 .b8 _ZZ12lud_diagonalPfiiE6shadow[1024];

	.loc 2 21 1
func_begin0:

//lud_kernel.cu:21 lud_diagonal(float *m, int matrix_dim, int offset)
	.loc	2 21 0

	.loc 2 21 1

	ld.param.u64 	%rd1, [_Z12lud_diagonalPfii_param_0];
	ld.param.u32 	%r22, [_Z12lud_diagonalPfii_param_1];
	ld.param.u32 	%r23, [_Z12lud_diagonalPfii_param_2];
func_exec_begin0:

//lud_kernel.cu:26 	int array_offset = offset*matrix_dim+offset;
	.loc	2 26 1
tmp0:
	mul.lo.s32 	%r24, %r23, %r22;
	add.s32 	%r50, %r24, %r23;
tmp1:
	mov.u32 	%r25, 0;

//lud_kernel.cu:27 	for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 27 6
tmp2:
	mov.b32 	%r49, %r25;
tmp3:

BB0_1:

//lud_kernel.cu:27 	for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 27 1
	setp.lt.s32	%p1, %r49, 16;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB0_4;
	bra.uni 	BB0_2;

BB0_2:

//lud_kernel.cu:28 		shadow[i][threadIdx.x]=m[array_offset+threadIdx.x];
	.loc	2 28 1
tmp4:
	mov.u32 	%r46, %tid.x;
	add.s32 	%r47, %r50, %r46;
	cvt.u64.u32	%rd70, %r47;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd72, %rd1, %rd71;
	ld.f32 	%f18, [%rd72];
	cvt.s64.s32	%rd73, %r49;
	shl.b64 	%rd74, %rd73, 6;
	mov.u64 	%rd75, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd76, %rd75, %rd74;
	mov.u32 	%r48, %tid.x;
	cvt.u64.u32	%rd77, %r48;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd79, %rd76, %rd78;
	st.shared.f32 	[%rd79], %f18;

//lud_kernel.cu:29 		array_offset += matrix_dim;
	.loc	2 29 1
	add.s32 	%r50, %r50, %r22;
tmp5:


//lud_kernel.cu:27 	for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 27 93
	add.s32 	%r49, %r49, 1;
tmp6:
	bra.uni 	BB0_1;
tmp7:

BB0_4:

//lud_kernel.cu:31 	__syncthreads();
	.loc	2 31 1
	bar.sync 	0;

	mov.u32 	%r26, 0;

//lud_kernel.cu:32 	for(i=0; i < BLOCK_SIZE-1; i++) {
	.loc	2 32 6
tmp8:
	mov.b32 	%r51, %r26;
tmp9:

BB0_6:

//lud_kernel.cu:32 	for(i=0; i < BLOCK_SIZE-1; i++) {
	.loc	2 32 1
	setp.lt.s32	%p3, %r51, 15;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB0_23;
	bra.uni 	BB0_7;

BB0_7:

//lud_kernel.cu:34 		if (threadIdx.x>i){
	.loc	2 34 1
tmp10:
	mov.u32 	%r33, %tid.x;
	setp.gt.u32	%p7, %r33, %r51;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB0_14;
	bra.uni 	BB0_8;

BB0_8:
	mov.u32 	%r34, 0;

//lud_kernel.cu:35 			for(j=0; j < i; j++)
	.loc	2 35 6
tmp11:
	mov.b32 	%r52, %r34;
tmp12:

BB0_9:

//lud_kernel.cu:35 			for(j=0; j < i; j++)
	.loc	2 35 1
	setp.lt.s32	%p9, %r52, %r51;
	not.pred 	%p10, %p9;
	@%p10 bra 	BB0_12;
	bra.uni 	BB0_10;

BB0_10:

//lud_kernel.cu:36 				shadow[threadIdx.x][i] -= shadow[threadIdx.x][j]*shadow[j][i];
	.loc	2 36 1
tmp13:
	mov.u32 	%r44, %tid.x;
	cvt.u64.u32	%rd51, %r44;
	shl.b64 	%rd52, %rd51, 6;
	mov.u64 	%rd53, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd54, %rd53, %rd52;
	cvt.s64.s32	%rd55, %r52;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd57, %rd54, %rd56;
	ld.shared.f32 	%f13, [%rd57];
	cvt.s64.s32	%rd58, %r52;
	shl.b64 	%rd59, %rd58, 6;
	add.s64 	%rd60, %rd53, %rd59;
	cvt.s64.s32	%rd61, %r51;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd63, %rd60, %rd62;
	ld.shared.f32 	%f14, [%rd63];
	mul.ftz.f32 	%f15, %f13, %f14;
	mov.u32 	%r45, %tid.x;
	cvt.u64.u32	%rd64, %r45;
	shl.b64 	%rd65, %rd64, 6;
	add.s64 	%rd66, %rd53, %rd65;
	cvt.s64.s32	%rd67, %r51;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd69, %rd66, %rd68;
	ld.shared.f32 	%f16, [%rd69];
	sub.ftz.f32 	%f17, %f16, %f15;
	st.shared.f32 	[%rd69], %f17;
tmp14:


//lud_kernel.cu:35 			for(j=0; j < i; j++)
	.loc	2 35 127
	add.s32 	%r52, %r52, 1;
tmp15:
	bra.uni 	BB0_9;
tmp16:

BB0_12:

//lud_kernel.cu:37 			shadow[threadIdx.x][i] /= shadow[i][i];
	.loc	2 37 1
	mov.u32 	%r35, %tid.x;
	cvt.u64.u32	%rd12, %r35;
	shl.b64 	%rd13, %rd12, 6;
	mov.u64 	%rd14, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd15, %rd14, %rd13;
	cvt.s64.s32	%rd16, %r51;
	shl.b64 	%rd17, %rd16, 2;
	add.s64 	%rd18, %rd15, %rd17;
	ld.shared.f32 	%f4, [%rd18];
	cvt.ftz.f64.f32	%fd1, %f4;
	cvt.rn.ftz.f32.f64	%f5, %fd1;
	cvt.s64.s32	%rd19, %r51;
	shl.b64 	%rd20, %rd19, 6;
	add.s64 	%rd21, %rd14, %rd20;
	cvt.s64.s32	%rd22, %r51;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd21, %rd23;
	ld.shared.f32 	%f6, [%rd24];
	cvt.ftz.f64.f32	%fd2, %f6;
	cvt.rn.ftz.f32.f64	%f7, %fd2;
tmp17:

//lud_kernel.cu:37 			shadow[threadIdx.x][i] /= shadow[i][i];
	.loc	2 37 130
	bra.uni	tmp18;
tmp18:

///usr/local/cuda/bin/../targets/x86_64-linux/include/device_functions.h:4515   return __nv_fast_fdividef(a, b);
	.loc	3 4515 10
	div.approx.ftz.f32 	%f1, %f5, %f7;
tmp19:


//lud_kernel.cu:37 			shadow[threadIdx.x][i] /= shadow[i][i];
	.loc	2 37 130
	mov.u32 	%r36, %tid.x;
	cvt.u64.u32	%rd25, %r36;
	shl.b64 	%rd26, %rd25, 6;
	mov.u64 	%rd27, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd28, %rd27, %rd26;
	cvt.s64.s32	%rd29, %r51;
	shl.b64 	%rd30, %rd29, 2;
	add.s64 	%rd31, %rd28, %rd30;
	st.shared.f32 	[%rd31], %f1;
tmp20:

BB0_14:

//lud_kernel.cu:40 		__syncthreads();
	.loc	2 40 1
	bar.sync 	0;


//lud_kernel.cu:41 		if (threadIdx.x>i){
	.loc	2 41 1
tmp21:
	mov.u32 	%r37, %tid.x;
	setp.gt.u32	%p11, %r37, %r51;
	not.pred 	%p12, %p11;
	@%p12 bra 	BB0_21;
	bra.uni 	BB0_16;

BB0_16:
	mov.u32 	%r38, 0;

//lud_kernel.cu:43 			for(j=0; j < i+1; j++)
	.loc	2 43 6
tmp22:
	mov.b32 	%r53, %r38;
tmp23:

BB0_17:

//lud_kernel.cu:43 			for(j=0; j < i+1; j++)
	.loc	2 43 1
	add.s32 	%r39, %r51, 1;
	setp.lt.s32	%p13, %r53, %r39;
	not.pred 	%p14, %p13;
	@%p14 bra 	BB0_20;
	bra.uni 	BB0_18;

BB0_18:

//lud_kernel.cu:44 				shadow[i+1][threadIdx.x] -= shadow[i+1][j]*shadow[j][threadIdx.x];
	.loc	2 44 1
tmp24:
	add.s32 	%r40, %r51, 1;
	cvt.s64.s32	%rd32, %r40;
	shl.b64 	%rd33, %rd32, 6;
	mov.u64 	%rd34, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd35, %rd34, %rd33;
	cvt.s64.s32	%rd36, %r53;
	shl.b64 	%rd37, %rd36, 2;
	add.s64 	%rd38, %rd35, %rd37;
	ld.shared.f32 	%f8, [%rd38];
	cvt.s64.s32	%rd39, %r53;
	shl.b64 	%rd40, %rd39, 6;
	add.s64 	%rd41, %rd34, %rd40;
	mov.u32 	%r41, %tid.x;
	cvt.u64.u32	%rd42, %r41;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd44, %rd41, %rd43;
	ld.shared.f32 	%f9, [%rd44];
	mul.ftz.f32 	%f10, %f8, %f9;
	add.s32 	%r42, %r51, 1;
	cvt.s64.s32	%rd45, %r42;
	shl.b64 	%rd46, %rd45, 6;
	add.s64 	%rd47, %rd34, %rd46;
	mov.u32 	%r43, %tid.x;
	cvt.u64.u32	%rd48, %r43;
	shl.b64 	%rd49, %rd48, 2;
	add.s64 	%rd50, %rd47, %rd49;
	ld.shared.f32 	%f11, [%rd50];
	sub.ftz.f32 	%f12, %f11, %f10;
	st.shared.f32 	[%rd50], %f12;
tmp25:


//lud_kernel.cu:43 			for(j=0; j < i+1; j++)
	.loc	2 43 133
	add.s32 	%r53, %r53, 1;
tmp26:
	bra.uni 	BB0_17;
tmp27:

BB0_20:

BB0_21:

//lud_kernel.cu:46 		__syncthreads();
	.loc	2 46 1
	bar.sync 	0;
tmp28:


//lud_kernel.cu:32 	for(i=0; i < BLOCK_SIZE-1; i++) {
	.loc	2 32 93
	add.s32 	%r51, %r51, 1;
tmp29:
	bra.uni 	BB0_6;
tmp30:

BB0_23:

//lud_kernel.cu:55 	array_offset = (offset+1)*matrix_dim+offset;
	.loc	2 55 1
	add.s32 	%r27, %r23, 1;
	mov.u32 	%r28, 1;
	mul.lo.s32 	%r29, %r27, %r22;
	add.s32 	%r55, %r29, %r23;
tmp31:

//lud_kernel.cu:56 	for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 56 6
	mov.b32 	%r54, %r28;
tmp32:

BB0_24:

//lud_kernel.cu:56 	for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 56 1
	setp.lt.s32	%p5, %r54, 16;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB0_27;
	bra.uni 	BB0_25;

BB0_25:

//lud_kernel.cu:57 		m[array_offset+threadIdx.x]=shadow[i][threadIdx.x];
	.loc	2 57 1
tmp33:
	cvt.s64.s32	%rd2, %r54;
	shl.b64 	%rd3, %rd2, 6;
	mov.u64 	%rd4, _ZZ12lud_diagonalPfiiE6shadow;
	add.s64 	%rd5, %rd4, %rd3;
	mov.u32 	%r30, %tid.x;
	cvt.u64.u32	%rd6, %r30;
	shl.b64 	%rd7, %rd6, 2;
	add.s64 	%rd8, %rd5, %rd7;
	ld.shared.f32 	%f3, [%rd8];
	mov.u32 	%r31, %tid.x;
	add.s32 	%r32, %r55, %r31;
	cvt.u64.u32	%rd9, %r32;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd1, %rd10;
	st.f32 	[%rd11], %f3;

//lud_kernel.cu:58 		array_offset += matrix_dim;
	.loc	2 58 1
	add.s32 	%r55, %r55, %r22;
tmp34:


//lud_kernel.cu:56 	for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 56 93
	add.s32 	%r54, %r54, 1;
tmp35:
	bra.uni 	BB0_24;
tmp36:

BB0_27:

//lud_kernel.cu:60 }
	.loc	2 60 2
	ret;
tmp37:
func_end0:
}

.visible .entry _Z13lud_perimeterPfii(
	.param .u64 _Z13lud_perimeterPfii_param_0,
	.param .u32 _Z13lud_perimeterPfii_param_1,
	.param .u32 _Z13lud_perimeterPfii_param_2
)
{
	.reg .pred 	%p<27>;
	.reg .s32 	%r<119>;
	.reg .f32 	%f<23>;
	.reg .s64 	%rd<123>;
	.reg .f64 	%fd<3>;
	// demoted variable
	.shared .align 4 .b8 _ZZ13lud_perimeterPfiiE3dia[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ13lud_perimeterPfiiE8peri_row[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ13lud_perimeterPfiiE8peri_col[1024];

	.loc 2 63 1
func_begin1:

//lud_kernel.cu:63 lud_perimeter(float *m, int matrix_dim, int offset)
	.loc	2 63 0

	.loc 2 63 1

	ld.param.u64 	%rd1, [_Z13lud_perimeterPfii_param_0];
	ld.param.u32 	%r55, [_Z13lud_perimeterPfii_param_1];
	ld.param.u32 	%r56, [_Z13lud_perimeterPfii_param_2];
func_exec_begin1:

//lud_kernel.cu:72 	if (threadIdx.x < BLOCK_SIZE) {
	.loc	2 72 1
tmp38:
	mov.u32 	%r57, %tid.x;
	setp.lt.u32	%p1, %r57, 16;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB1_10;
	bra.uni 	BB1_1;

BB1_1:

//lud_kernel.cu:73 		idx = threadIdx.x;
	.loc	2 73 1
tmp39:
	mov.u32 	%r1, %tid.x;
tmp40:

//lud_kernel.cu:75 		array_offset = offset*matrix_dim+offset;
	.loc	2 75 1
	mul.lo.s32 	%r70, %r56, %r55;
	add.s32 	%r104, %r70, %r56;
tmp41:
	mov.u32 	%r71, 0;

//lud_kernel.cu:76 		for (i=0; i < BLOCK_SIZE/2; i++){
	.loc	2 76 6
tmp42:
	mov.b32 	%r103, %r71;
tmp43:

BB1_2:

//lud_kernel.cu:76 		for (i=0; i < BLOCK_SIZE/2; i++){
	.loc	2 76 1
	setp.lt.s32	%p7, %r103, 8;
	not.pred 	%p8, %p7;
	@%p8 bra 	BB1_5;
	bra.uni 	BB1_3;

BB1_3:

//lud_kernel.cu:77 			dia[i][idx]=m[array_offset+idx];
	.loc	2 77 1
tmp44:
	add.s32 	%r102, %r104, %r1;
	cvt.s64.s32	%rd113, %r102;
	shl.b64 	%rd114, %rd113, 2;
	add.s64 	%rd115, %rd1, %rd114;
	ld.f32 	%f22, [%rd115];
	cvt.s64.s32	%rd116, %r103;
	shl.b64 	%rd117, %rd116, 6;
	mov.u64 	%rd118, _ZZ13lud_perimeterPfiiE3dia;
	add.s64 	%rd119, %rd118, %rd117;
	cvt.s64.s32	%rd120, %r1;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd122, %rd119, %rd121;
	st.shared.f32 	[%rd122], %f22;

//lud_kernel.cu:78 			array_offset += matrix_dim;
	.loc	2 78 1
	add.s32 	%r104, %r104, %r55;
tmp45:


//lud_kernel.cu:76 		for (i=0; i < BLOCK_SIZE/2; i++){
	.loc	2 76 92
	add.s32 	%r103, %r103, 1;
tmp46:
	bra.uni 	BB1_2;
tmp47:

BB1_5:

//lud_kernel.cu:81 		array_offset = offset*matrix_dim+offset;
	.loc	2 81 1
	mul.lo.s32 	%r72, %r56, %r55;
	add.s32 	%r106, %r72, %r56;
tmp48:
	mov.u32 	%r73, 0;

//lud_kernel.cu:82 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 82 6
tmp49:
	mov.b32 	%r105, %r73;
tmp50:

BB1_6:

//lud_kernel.cu:82 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 82 1
	setp.lt.s32	%p9, %r105, 16;
	not.pred 	%p10, %p9;
	@%p10 bra 	BB1_9;
	bra.uni 	BB1_7;

BB1_7:

//lud_kernel.cu:83 			peri_row[i][idx]=m[array_offset+(blockIdx.x+1)*BLOCK_SIZE+idx];
	.loc	2 83 1
tmp51:
	mov.u32 	%r97, %ctaid.x;
	add.s32 	%r98, %r97, 1;
	mul.lo.s32 	%r99, %r98, 16;
	add.s32 	%r100, %r106, %r99;
	add.s32 	%r101, %r100, %r1;
	cvt.u64.u32	%rd103, %r101;
	shl.b64 	%rd104, %rd103, 2;
	add.s64 	%rd105, %rd1, %rd104;
	ld.f32 	%f21, [%rd105];
	cvt.s64.s32	%rd106, %r105;
	shl.b64 	%rd107, %rd106, 6;
	mov.u64 	%rd108, _ZZ13lud_perimeterPfiiE8peri_row;
	add.s64 	%rd109, %rd108, %rd107;
	cvt.s64.s32	%rd110, %r1;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd109, %rd111;
	st.shared.f32 	[%rd112], %f21;

//lud_kernel.cu:84 			array_offset += matrix_dim;
	.loc	2 84 1
	add.s32 	%r106, %r106, %r55;
tmp52:


//lud_kernel.cu:82 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 82 93
	add.s32 	%r105, %r105, 1;
tmp53:
	bra.uni 	BB1_6;

BB1_9:
	bra.uni 	BB1_19;
tmp54:

BB1_10:

//lud_kernel.cu:88 		idx = threadIdx.x-BLOCK_SIZE;
	.loc	2 88 1
	mov.u32 	%r58, %tid.x;
	sub.s32 	%r14, %r58, 16;
tmp55:

//lud_kernel.cu:90 		array_offset = (offset+BLOCK_SIZE/2)*matrix_dim+offset;
	.loc	2 90 1
	add.s32 	%r59, %r56, 8;
	mov.u32 	%r60, 8;
	mul.lo.s32 	%r61, %r59, %r55;
	add.s32 	%r108, %r61, %r56;
tmp56:

//lud_kernel.cu:91 		for (i=BLOCK_SIZE/2; i < BLOCK_SIZE; i++){
	.loc	2 91 6
	mov.b32 	%r107, %r60;
tmp57:

BB1_11:

//lud_kernel.cu:91 		for (i=BLOCK_SIZE/2; i < BLOCK_SIZE; i++){
	.loc	2 91 1
	setp.lt.s32	%p3, %r107, 16;
	not.pred 	%p4, %p3;
	@%p4 bra 	BB1_14;
	bra.uni 	BB1_12;

BB1_12:

//lud_kernel.cu:92 			dia[i][idx]=m[array_offset+idx];
	.loc	2 92 1
tmp58:
	add.s32 	%r69, %r108, %r14;
	cvt.s64.s32	%rd12, %r69;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd1, %rd13;
	ld.f32 	%f4, [%rd14];
	cvt.s64.s32	%rd15, %r107;
	shl.b64 	%rd16, %rd15, 6;
	mov.u64 	%rd17, _ZZ13lud_perimeterPfiiE3dia;
	add.s64 	%rd18, %rd17, %rd16;
	cvt.s64.s32	%rd19, %r14;
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd21, %rd18, %rd20;
	st.shared.f32 	[%rd21], %f4;

//lud_kernel.cu:93 			array_offset += matrix_dim;
	.loc	2 93 1
	add.s32 	%r108, %r108, %r55;
tmp59:


//lud_kernel.cu:91 		for (i=BLOCK_SIZE/2; i < BLOCK_SIZE; i++){
	.loc	2 91 93
	add.s32 	%r107, %r107, 1;
tmp60:
	bra.uni 	BB1_11;
tmp61:

BB1_14:

//lud_kernel.cu:96 		array_offset = (offset+(blockIdx.x+1)*BLOCK_SIZE)*matrix_dim+offset;
	.loc	2 96 1
	mov.u32 	%r62, %ctaid.x;
	add.s32 	%r63, %r62, 1;
	mul.lo.s32 	%r64, %r63, 16;
	add.s32 	%r65, %r56, %r64;
	mul.lo.s32 	%r66, %r65, %r55;
	add.s32 	%r110, %r66, %r56;
tmp62:
	mov.u32 	%r67, 0;

//lud_kernel.cu:97 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 97 6
tmp63:
	mov.b32 	%r109, %r67;
tmp64:

BB1_15:

//lud_kernel.cu:97 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 97 1
	setp.lt.s32	%p5, %r109, 16;
	not.pred 	%p6, %p5;
	@%p6 bra 	BB1_18;
	bra.uni 	BB1_16;

BB1_16:

//lud_kernel.cu:98 			peri_col[i][idx] = m[array_offset+idx];
	.loc	2 98 1
tmp65:
	add.s32 	%r68, %r110, %r14;
	cvt.s64.s32	%rd2, %r68;
	shl.b64 	%rd3, %rd2, 2;
	add.s64 	%rd4, %rd1, %rd3;
	ld.f32 	%f3, [%rd4];
	cvt.s64.s32	%rd5, %r109;
	shl.b64 	%rd6, %rd5, 6;
	mov.u64 	%rd7, _ZZ13lud_perimeterPfiiE8peri_col;
	add.s64 	%rd8, %rd7, %rd6;
	cvt.s64.s32	%rd9, %r14;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd8, %rd10;
	st.shared.f32 	[%rd11], %f3;

//lud_kernel.cu:99 			array_offset += matrix_dim;
	.loc	2 99 1
	add.s32 	%r110, %r110, %r55;
tmp66:


//lud_kernel.cu:97 		for (i=0; i < BLOCK_SIZE; i++) {
	.loc	2 97 93
	add.s32 	%r109, %r109, 1;
tmp67:
	bra.uni 	BB1_15;
tmp68:

BB1_18:

BB1_19:

//lud_kernel.cu:103 	__syncthreads();
	.loc	2 103 1
	bar.sync 	0;


//lud_kernel.cu:137 	if (threadIdx.x < BLOCK_SIZE) { //peri-row
	.loc	2 137 1
tmp69:
	mov.u32 	%r74, %tid.x;
	setp.lt.u32	%p11, %r74, 16;
	not.pred 	%p12, %p11;
	@%p12 bra 	BB1_30;
	bra.uni 	BB1_21;

BB1_21:

//lud_kernel.cu:138 		idx=threadIdx.x;
	.loc	2 138 1
tmp70:
	mov.u32 	%r27, %tid.x;
tmp71:
	mov.u32 	%r78, 1;

//lud_kernel.cu:139 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 139 6
tmp72:
	mov.b32 	%r111, %r78;
tmp73:

BB1_22:

//lud_kernel.cu:139 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 139 1
	setp.lt.s32	%p17, %r111, 16;
	not.pred 	%p18, %p17;
	@%p18 bra 	BB1_29;
	bra.uni 	BB1_23;

BB1_23:
	mov.u32 	%r96, 0;

//lud_kernel.cu:140 			for (j=0; j < i; j++)
	.loc	2 140 6
tmp74:
	mov.b32 	%r112, %r96;
tmp75:

BB1_24:

//lud_kernel.cu:140 			for (j=0; j < i; j++)
	.loc	2 140 1
	setp.lt.s32	%p25, %r112, %r111;
	not.pred 	%p26, %p25;
	@%p26 bra 	BB1_27;
	bra.uni 	BB1_25;

BB1_25:

//lud_kernel.cu:141 				peri_row[i][idx]-=dia[i][j]*peri_row[j][idx];
	.loc	2 141 1
tmp76:
	cvt.s64.s32	%rd83, %r111;
	shl.b64 	%rd84, %rd83, 6;
	mov.u64 	%rd85, _ZZ13lud_perimeterPfiiE3dia;
	add.s64 	%rd86, %rd85, %rd84;
	cvt.s64.s32	%rd87, %r112;
	shl.b64 	%rd88, %rd87, 2;
	add.s64 	%rd89, %rd86, %rd88;
	ld.shared.f32 	%f16, [%rd89];
	cvt.s64.s32	%rd90, %r112;
	shl.b64 	%rd91, %rd90, 6;
	mov.u64 	%rd92, _ZZ13lud_perimeterPfiiE8peri_row;
	add.s64 	%rd93, %rd92, %rd91;
	cvt.s64.s32	%rd94, %r27;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd96, %rd93, %rd95;
	ld.shared.f32 	%f17, [%rd96];
	mul.ftz.f32 	%f18, %f16, %f17;
	cvt.s64.s32	%rd97, %r111;
	shl.b64 	%rd98, %rd97, 6;
	add.s64 	%rd99, %rd92, %rd98;
	cvt.s64.s32	%rd100, %r27;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd102, %rd99, %rd101;
	ld.shared.f32 	%f19, [%rd102];
	sub.ftz.f32 	%f20, %f19, %f18;
	st.shared.f32 	[%rd102], %f20;
tmp77:


//lud_kernel.cu:140 			for (j=0; j < i; j++)
	.loc	2 140 127
	add.s32 	%r112, %r112, 1;
tmp78:
	bra.uni 	BB1_24;
tmp79:

BB1_27:


//lud_kernel.cu:139 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 139 93
	add.s32 	%r111, %r111, 1;
tmp80:
	bra.uni 	BB1_22;

BB1_29:
	bra.uni 	BB1_40;
tmp81:

BB1_30:

//lud_kernel.cu:144 		idx=threadIdx.x - BLOCK_SIZE;
	.loc	2 144 1
	mov.u32 	%r75, %tid.x;
	sub.s32 	%r34, %r75, 16;
tmp82:
	mov.u32 	%r76, 0;

//lud_kernel.cu:145 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 145 6
tmp83:
	mov.b32 	%r113, %r76;
tmp84:

BB1_31:

//lud_kernel.cu:145 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 145 1
	setp.lt.s32	%p13, %r113, 16;
	not.pred 	%p14, %p13;
	@%p14 bra 	BB1_39;
	bra.uni 	BB1_32;

BB1_32:
	mov.u32 	%r77, 0;

//lud_kernel.cu:146 			for(j=0; j < i; j++)
	.loc	2 146 6
tmp85:
	mov.b32 	%r114, %r77;
tmp86:

BB1_33:

//lud_kernel.cu:146 			for(j=0; j < i; j++)
	.loc	2 146 1
	setp.lt.s32	%p15, %r114, %r113;
	not.pred 	%p16, %p15;
	@%p16 bra 	BB1_36;
	bra.uni 	BB1_34;

BB1_34:

//lud_kernel.cu:147 				peri_col[idx][i]-=peri_col[idx][j]*dia[j][i];
	.loc	2 147 1
tmp87:
	cvt.s64.s32	%rd43, %r34;
	shl.b64 	%rd44, %rd43, 6;
	mov.u64 	%rd45, _ZZ13lud_perimeterPfiiE8peri_col;
	add.s64 	%rd46, %rd45, %rd44;
	cvt.s64.s32	%rd47, %r114;
	shl.b64 	%rd48, %rd47, 2;
	add.s64 	%rd49, %rd46, %rd48;
	ld.shared.f32 	%f9, [%rd49];
	cvt.s64.s32	%rd50, %r114;
	shl.b64 	%rd51, %rd50, 6;
	mov.u64 	%rd52, _ZZ13lud_perimeterPfiiE3dia;
	add.s64 	%rd53, %rd52, %rd51;
	cvt.s64.s32	%rd54, %r113;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd56, %rd53, %rd55;
	ld.shared.f32 	%f10, [%rd56];
	mul.ftz.f32 	%f11, %f9, %f10;
	cvt.s64.s32	%rd57, %r34;
	shl.b64 	%rd58, %rd57, 6;
	add.s64 	%rd59, %rd45, %rd58;
	cvt.s64.s32	%rd60, %r113;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd62, %rd59, %rd61;
	ld.shared.f32 	%f12, [%rd62];
	sub.ftz.f32 	%f13, %f12, %f11;
	st.shared.f32 	[%rd62], %f13;
tmp88:


//lud_kernel.cu:146 			for(j=0; j < i; j++)
	.loc	2 146 127
	add.s32 	%r114, %r114, 1;
tmp89:
	bra.uni 	BB1_33;
tmp90:

BB1_36:

//lud_kernel.cu:148 			peri_col[idx][i] /= dia[i][i];
	.loc	2 148 1
	cvt.s64.s32	%rd22, %r34;
	shl.b64 	%rd23, %rd22, 6;
	mov.u64 	%rd24, _ZZ13lud_perimeterPfiiE8peri_col;
	add.s64 	%rd25, %rd24, %rd23;
	cvt.s64.s32	%rd26, %r113;
	shl.b64 	%rd27, %rd26, 2;
	add.s64 	%rd28, %rd25, %rd27;
	ld.shared.f32 	%f5, [%rd28];
	cvt.ftz.f64.f32	%fd1, %f5;
	cvt.rn.ftz.f32.f64	%f6, %fd1;
	cvt.s64.s32	%rd29, %r113;
	shl.b64 	%rd30, %rd29, 6;
	mov.u64 	%rd31, _ZZ13lud_perimeterPfiiE3dia;
	add.s64 	%rd32, %rd31, %rd30;
	cvt.s64.s32	%rd33, %r113;
	shl.b64 	%rd34, %rd33, 2;
	add.s64 	%rd35, %rd32, %rd34;
	ld.shared.f32 	%f7, [%rd35];
	cvt.ftz.f64.f32	%fd2, %f7;
	cvt.rn.ftz.f32.f64	%f8, %fd2;
tmp91:

//lud_kernel.cu:148 			peri_col[idx][i] /= dia[i][i];
	.loc	2 148 160
	bra.uni	tmp92;
tmp92:

///usr/local/cuda/bin/../targets/x86_64-linux/include/device_functions.h:4515   return __nv_fast_fdividef(a, b);
	.loc	3 4515 10
	div.approx.ftz.f32 	%f1, %f6, %f8;
tmp93:


//lud_kernel.cu:148 			peri_col[idx][i] /= dia[i][i];
	.loc	2 148 160
	cvt.s64.s32	%rd36, %r34;
	shl.b64 	%rd37, %rd36, 6;
	mov.u64 	%rd38, _ZZ13lud_perimeterPfiiE8peri_col;
	add.s64 	%rd39, %rd38, %rd37;
	cvt.s64.s32	%rd40, %r113;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd42, %rd39, %rd41;
	st.shared.f32 	[%rd42], %f1;
tmp94:


//lud_kernel.cu:145 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 145 93
	add.s32 	%r113, %r113, 1;
tmp95:
	bra.uni 	BB1_31;
tmp96:

BB1_39:

BB1_40:

//lud_kernel.cu:152 	__syncthreads();
	.loc	2 152 1
	bar.sync 	0;


//lud_kernel.cu:154 	if (threadIdx.x < BLOCK_SIZE) { //peri-row
	.loc	2 154 1
tmp97:
	mov.u32 	%r79, %tid.x;
	setp.lt.u32	%p19, %r79, 16;
	not.pred 	%p20, %p19;
	@%p20 bra 	BB1_47;
	bra.uni 	BB1_42;

BB1_42:

//lud_kernel.cu:155 		idx=threadIdx.x;
	.loc	2 155 1
tmp98:
	mov.u32 	%r41, %tid.x;
tmp99:

//lud_kernel.cu:156 		array_offset = (offset+1)*matrix_dim+offset;
	.loc	2 156 1
	add.s32 	%r88, %r56, 1;
	mov.u32 	%r89, 1;
	mul.lo.s32 	%r90, %r88, %r55;
	add.s32 	%r116, %r90, %r56;
tmp100:

//lud_kernel.cu:157 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 157 6
	mov.b32 	%r115, %r89;
tmp101:

BB1_43:

//lud_kernel.cu:157 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 157 1
	setp.lt.s32	%p23, %r115, 16;
	not.pred 	%p24, %p23;
	@%p24 bra 	BB1_46;
	bra.uni 	BB1_44;

BB1_44:

//lud_kernel.cu:158 			m[array_offset+(blockIdx.x+1)*BLOCK_SIZE+idx] = peri_row[i][idx];
	.loc	2 158 1
tmp102:
	cvt.s64.s32	%rd73, %r115;
	shl.b64 	%rd74, %rd73, 6;
	mov.u64 	%rd75, _ZZ13lud_perimeterPfiiE8peri_row;
	add.s64 	%rd76, %rd75, %rd74;
	cvt.s64.s32	%rd77, %r41;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd79, %rd76, %rd78;
	ld.shared.f32 	%f15, [%rd79];
	mov.u32 	%r91, %ctaid.x;
	add.s32 	%r92, %r91, 1;
	mul.lo.s32 	%r93, %r92, 16;
	add.s32 	%r94, %r116, %r93;
	add.s32 	%r95, %r94, %r41;
	cvt.u64.u32	%rd80, %r95;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd82, %rd1, %rd81;
	st.f32 	[%rd82], %f15;

//lud_kernel.cu:159 			array_offset += matrix_dim;
	.loc	2 159 1
	add.s32 	%r116, %r116, %r55;
tmp103:


//lud_kernel.cu:157 		for(i=1; i < BLOCK_SIZE; i++){
	.loc	2 157 93
	add.s32 	%r115, %r115, 1;
tmp104:
	bra.uni 	BB1_43;

BB1_46:
	bra.uni 	BB1_52;
tmp105:

BB1_47:

//lud_kernel.cu:162 		idx=threadIdx.x - BLOCK_SIZE;
	.loc	2 162 1
	mov.u32 	%r80, %tid.x;
	sub.s32 	%r48, %r80, 16;
tmp106:

//lud_kernel.cu:163 		array_offset = (offset+(blockIdx.x+1)*BLOCK_SIZE)*matrix_dim+offset;
	.loc	2 163 1
	mov.u32 	%r81, %ctaid.x;
	add.s32 	%r82, %r81, 1;
	mul.lo.s32 	%r83, %r82, 16;
	add.s32 	%r84, %r56, %r83;
	mul.lo.s32 	%r85, %r84, %r55;
	add.s32 	%r118, %r85, %r56;
tmp107:
	mov.u32 	%r86, 0;

//lud_kernel.cu:164 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 164 6
tmp108:
	mov.b32 	%r117, %r86;
tmp109:

BB1_48:

//lud_kernel.cu:164 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 164 1
	setp.lt.s32	%p21, %r117, 16;
	not.pred 	%p22, %p21;
	@%p22 bra 	BB1_51;
	bra.uni 	BB1_49;

BB1_49:

//lud_kernel.cu:165 			m[array_offset+idx] =  peri_col[i][idx];
	.loc	2 165 1
tmp110:
	cvt.s64.s32	%rd63, %r117;
	shl.b64 	%rd64, %rd63, 6;
	mov.u64 	%rd65, _ZZ13lud_perimeterPfiiE8peri_col;
	add.s64 	%rd66, %rd65, %rd64;
	cvt.s64.s32	%rd67, %r48;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd69, %rd66, %rd68;
	ld.shared.f32 	%f14, [%rd69];
	add.s32 	%r87, %r118, %r48;
	cvt.s64.s32	%rd70, %r87;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd72, %rd1, %rd71;
	st.f32 	[%rd72], %f14;

//lud_kernel.cu:166 			array_offset += matrix_dim;
	.loc	2 166 1
	add.s32 	%r118, %r118, %r55;
tmp111:


//lud_kernel.cu:164 		for(i=0; i < BLOCK_SIZE; i++){
	.loc	2 164 93
	add.s32 	%r117, %r117, 1;
tmp112:
	bra.uni 	BB1_48;
tmp113:

BB1_51:

BB1_52:

//lud_kernel.cu:170 }
	.loc	2 170 2
	ret;
tmp114:
func_end1:
}

.visible .entry _Z12lud_internalPfii(
	.param .u64 _Z12lud_internalPfii_param_0,
	.param .u32 _Z12lud_internalPfii_param_1,
	.param .u32 _Z12lud_internalPfii_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<40>;
	.reg .f32 	%f<13>;
	.reg .s64 	%rd<39>;
	// demoted variable
	.shared .align 4 .b8 _ZZ12lud_internalPfiiE8peri_row[1024];
	// demoted variable
	.shared .align 4 .b8 _ZZ12lud_internalPfiiE8peri_col[1024];

	.loc 2 173 1
func_begin2:

//lud_kernel.cu:173 lud_internal(float *m, int matrix_dim, int offset)
	.loc	2 173 0

	.loc 2 173 1

	ld.param.u64 	%rd1, [_Z12lud_internalPfii_param_0];
	ld.param.u32 	%r6, [_Z12lud_internalPfii_param_1];
	ld.param.u32 	%r7, [_Z12lud_internalPfii_param_2];
func_exec_begin2:

//lud_kernel.cu:181 	int global_row_id = offset + (blockIdx.y+1)*BLOCK_SIZE;
	.loc	2 181 1
tmp115:
	mov.u32 	%r8, %ctaid.y;
	add.s32 	%r9, %r8, 1;
	mul.lo.s32 	%r10, %r9, 16;
	add.s32 	%r1, %r7, %r10;
tmp116:

//lud_kernel.cu:182 	int global_col_id = offset + (blockIdx.x+1)*BLOCK_SIZE;
	.loc	2 182 1
	mov.u32 	%r11, %ctaid.x;
	add.s32 	%r12, %r11, 1;
	mul.lo.s32 	%r13, %r12, 16;
	add.s32 	%r2, %r7, %r13;
tmp117:

//lud_kernel.cu:184 	peri_row[threadIdx.y][threadIdx.x] = m[(offset+threadIdx.y)*matrix_dim+global_col_id+threadIdx.x];
	.loc	2 184 1
	mov.u32 	%r14, %tid.y;
	add.s32 	%r15, %r7, %r14;
	mul.lo.s32 	%r16, %r15, %r6;
	add.s32 	%r17, %r16, %r2;
	mov.u32 	%r18, %tid.x;
	add.s32 	%r19, %r17, %r18;
	cvt.u64.u32	%rd2, %r19;
	shl.b64 	%rd3, %rd2, 2;
	add.s64 	%rd4, %rd1, %rd3;
	ld.f32 	%f4, [%rd4];
	mov.u32 	%r20, %tid.y;
	cvt.u64.u32	%rd5, %r20;
	shl.b64 	%rd6, %rd5, 6;
	mov.u64 	%rd7, _ZZ12lud_internalPfiiE8peri_row;
	add.s64 	%rd8, %rd7, %rd6;
	mov.u32 	%r21, %tid.x;
	cvt.u64.u32	%rd9, %r21;
	shl.b64 	%rd10, %rd9, 2;
	add.s64 	%rd11, %rd8, %rd10;
	st.shared.f32 	[%rd11], %f4;

//lud_kernel.cu:185 	peri_col[threadIdx.y][threadIdx.x] = m[(global_row_id+threadIdx.y)*matrix_dim+offset+threadIdx.x];
	.loc	2 185 1
	mov.u32 	%r22, %tid.y;
	add.s32 	%r23, %r1, %r22;
	mul.lo.s32 	%r24, %r23, %r6;
	add.s32 	%r25, %r24, %r7;
	mov.u32 	%r26, %tid.x;
	add.s32 	%r27, %r25, %r26;
	cvt.u64.u32	%rd12, %r27;
	shl.b64 	%rd13, %rd12, 2;
	add.s64 	%rd14, %rd1, %rd13;
	ld.f32 	%f5, [%rd14];
	mov.u32 	%r28, %tid.y;
	cvt.u64.u32	%rd15, %r28;
	shl.b64 	%rd16, %rd15, 6;
	mov.u64 	%rd17, _ZZ12lud_internalPfiiE8peri_col;
	add.s64 	%rd18, %rd17, %rd16;
	mov.u32 	%r29, %tid.x;
	cvt.u64.u32	%rd19, %r29;
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd21, %rd18, %rd20;
	st.shared.f32 	[%rd21], %f5;


//lud_kernel.cu:187 	__syncthreads();
	.loc	2 187 1
	bar.sync 	0;

	mov.f32 	%f6, 0f00000000;

//lud_kernel.cu:189 	sum = 0;
	.loc	2 189 1
	mov.f32 	%f12, %f6;
tmp118:
	mov.u32 	%r30, 0;

//lud_kernel.cu:190 	for (i=0; i < BLOCK_SIZE; i++)
	.loc	2 190 6
tmp119:
	mov.b32 	%r39, %r30;
tmp120:

BB2_3:

//lud_kernel.cu:190 	for (i=0; i < BLOCK_SIZE; i++)
	.loc	2 190 1
	setp.lt.s32	%p1, %r39, 16;
	not.pred 	%p2, %p1;
	@%p2 bra 	BB2_6;
	bra.uni 	BB2_4;

BB2_4:

//lud_kernel.cu:191 		sum += peri_col[threadIdx.y][i] * peri_row[i][threadIdx.x];
	.loc	2 191 1
tmp121:
	mov.u32 	%r37, %tid.y;
	cvt.u64.u32	%rd25, %r37;
	shl.b64 	%rd26, %rd25, 6;
	mov.u64 	%rd27, _ZZ12lud_internalPfiiE8peri_col;
	add.s64 	%rd28, %rd27, %rd26;
	cvt.s64.s32	%rd29, %r39;
	shl.b64 	%rd30, %rd29, 2;
	add.s64 	%rd31, %rd28, %rd30;
	ld.shared.f32 	%f9, [%rd31];
	cvt.s64.s32	%rd32, %r39;
	shl.b64 	%rd33, %rd32, 6;
	mov.u64 	%rd34, _ZZ12lud_internalPfiiE8peri_row;
	add.s64 	%rd35, %rd34, %rd33;
	mov.u32 	%r38, %tid.x;
	cvt.u64.u32	%rd36, %r38;
	shl.b64 	%rd37, %rd36, 2;
	add.s64 	%rd38, %rd35, %rd37;
	ld.shared.f32 	%f10, [%rd38];
	mul.ftz.f32 	%f11, %f9, %f10;
	add.ftz.f32 	%f12, %f12, %f11;
tmp122:


//lud_kernel.cu:190 	for (i=0; i < BLOCK_SIZE; i++)
	.loc	2 190 93
	add.s32 	%r39, %r39, 1;
tmp123:
	bra.uni 	BB2_3;
tmp124:

BB2_6:

//lud_kernel.cu:192 	m[(global_row_id+threadIdx.y)*matrix_dim+global_col_id+threadIdx.x] -= sum;
	.loc	2 192 1
	mov.u32 	%r31, %tid.y;
	add.s32 	%r32, %r1, %r31;
	mul.lo.s32 	%r33, %r32, %r6;
	add.s32 	%r34, %r33, %r2;
	mov.u32 	%r35, %tid.x;
	add.s32 	%r36, %r34, %r35;
	cvt.u64.u32	%rd22, %r36;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd24, %rd1, %rd23;
	ld.f32 	%f7, [%rd24];
	sub.ftz.f32 	%f8, %f7, %f12;
	st.f32 	[%rd24], %f8;
tmp125:

//lud_kernel.cu:195 }
	.loc	2 195 2
	ret;
tmp126:
func_end2:
}

.section .debug_info {
 .b32 1855
 .b8 2
 .b8 0
 .b32 .debug_abbrev
 .b8 8
 .b8 1
 .b8 108
 .b8 103
 .b8 101
 .b8 110
 .b8 102
 .b8 101
 .b8 58
 .b8 32
 .b8 69
 .b8 68
 .b8 71
 .b8 32
 .b8 52
 .b8 46
 .b8 49

 .b8 0
 .b8 4
 .b8 108
 .b8 117
 .b8 100
 .b8 46
 .b8 99
 .b8 117

 .b8 0
 .b64 0
 .b32 .debug_line
 .b8 47
 .b8 100
 .b8 97
 .b8 116
 .b8 97
 .b8 47
 .b8 103
 .b8 112
 .b8 108
 .b8 105
 .b8 47
 .b8 104
 .b8 101
 .b8 116
 .b8 101
 .b8 114
 .b8 111
 .b8 103
 .b8 101
 .b8 110
 .b8 111
 .b8 117
 .b8 115
 .b8 45
 .b8 101
 .b8 112
 .b8 47
 .b8 109
 .b8 101
 .b8 109
 .b8 111
 .b8 114
 .b8 121
 .b8 47
 .b8 108
 .b8 117
 .b8 100
 .b8 47
 .b8 115
 .b8 97
 .b8 115
 .b8 115

 .b8 0
 .b8 2
 .b8 102
 .b8 108
 .b8 111
 .b8 97
 .b8 116

 .b8 0
 .b8 4
 .b32 4
 .b8 3
 .b32 4
 .b8 5
 .b8 4
 .b32 137
 .b32 91
 .b8 5
 .b32 103
 .b32 15
 .b8 5
 .b32 103
 .b32 15
 .b8 0
 .b8 6
 .b32 204
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102

 .b8 0
 .b32 3
 .b32 4512
 .b32 91
 .b8 1
 .b8 7
 .b8 97

 .b8 0
 .b32 3
 .b32 4512
 .b32 91
 .b8 7
 .b8 98

 .b8 0
 .b32 3
 .b32 4512
 .b32 91
 .b8 0
 .b8 8
 .b32 672
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 100
 .b8 105
 .b8 97
 .b8 103
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 100
 .b8 105
 .b8 97
 .b8 103
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b32 2
 .b32 21
 .b32 672
 .b8 1
 .b64 func_begin0
 .b64 func_end0
 .b8 1
 .b8 156
 .b8 9
 .b8 109

 .b8 0
 .b32 2
 .b32 21
 .b32 1838
 .b8 9
 .b8 3
 .b64 _Z12lud_diagonalPfii_param_0
 .b8 7
 .b8 9
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 95
 .b8 100
 .b8 105
 .b8 109

 .b8 0
 .b32 2
 .b32 21
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z12lud_diagonalPfii_param_1
 .b8 7
 .b8 9
 .b8 111
 .b8 102
 .b8 102
 .b8 115
 .b8 101
 .b8 116

 .b8 0
 .b32 2
 .b32 21
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z12lud_diagonalPfii_param_2
 .b8 7
 .b8 10
 .b64 tmp0
 .b64 tmp37
 .b8 10
 .b64 tmp0
 .b64 tmp36
 .b8 10
 .b64 tmp0
 .b64 tmp36
 .b8 11
 .b8 97
 .b8 114
 .b8 114
 .b8 97
 .b8 121
 .b8 95
 .b8 111
 .b8 102
 .b8 102
 .b8 115
 .b8 101
 .b8 116

 .b8 0
 .b32 2
 .b32 26
 .b32 1848
 .b32 .debug_loc+0
 .b8 11
 .b8 105

 .b8 0
 .b32 2
 .b32 23
 .b32 1848
 .b32 .debug_loc+112
 .b8 11
 .b8 106

 .b8 0
 .b32 2
 .b32 23
 .b32 1848
 .b32 .debug_loc+272
 .b8 12
 .b8 115
 .b8 104
 .b8 97
 .b8 100
 .b8 111
 .b8 119

 .b8 0
 .b32 109
 .b32 2
 .b32 24
 .b8 9
 .b8 3
 .b64 _ZZ12lud_diagonalPfiiE6shadow
 .b8 8
 .b8 10
 .b64 tmp8
 .b64 tmp30
 .b8 10
 .b64 tmp9
 .b64 tmp30
 .b8 10
 .b64 tmp10
 .b64 tmp28
 .b8 10
 .b64 tmp10
 .b64 tmp20
 .b8 10
 .b64 tmp11
 .b64 tmp20
 .b8 13
 .b32 137
 .b64 tmp17
 .b64 tmp19
 .b32 2
 .b32 37
 .b8 14
 .b32 173
 .b8 5
 .b8 144
 .b8 181
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 14
 .b32 188
 .b8 5
 .b8 144
 .b8 183
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 15
 .b8 118
 .b8 111
 .b8 105
 .b8 100

 .b8 0
 .b8 8
 .b32 1252
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 109
 .b8 101
 .b8 116
 .b8 101
 .b8 114
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 109
 .b8 101
 .b8 116
 .b8 101
 .b8 114
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b32 2
 .b32 63
 .b32 672
 .b8 1
 .b64 func_begin1
 .b64 func_end1
 .b8 1
 .b8 156
 .b8 9
 .b8 109

 .b8 0
 .b32 2
 .b32 63
 .b32 1838
 .b8 9
 .b8 3
 .b64 _Z13lud_perimeterPfii_param_0
 .b8 7
 .b8 9
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 95
 .b8 100
 .b8 105
 .b8 109

 .b8 0
 .b32 2
 .b32 63
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z13lud_perimeterPfii_param_1
 .b8 7
 .b8 9
 .b8 111
 .b8 102
 .b8 102
 .b8 115
 .b8 101
 .b8 116

 .b8 0
 .b32 2
 .b32 63
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z13lud_perimeterPfii_param_2
 .b8 7
 .b8 10
 .b64 tmp38
 .b64 tmp114
 .b8 10
 .b64 tmp38
 .b64 tmp113
 .b8 10
 .b64 tmp38
 .b64 tmp113
 .b8 11
 .b8 105
 .b8 100
 .b8 120

 .b8 0
 .b32 2
 .b32 70
 .b32 1848
 .b32 .debug_loc+384
 .b8 11
 .b8 97
 .b8 114
 .b8 114
 .b8 97
 .b8 121
 .b8 95
 .b8 111
 .b8 102
 .b8 102
 .b8 115
 .b8 101
 .b8 116

 .b8 0
 .b32 2
 .b32 69
 .b32 1848
 .b32 .debug_loc+543
 .b8 11
 .b8 105

 .b8 0
 .b32 2
 .b32 69
 .b32 1848
 .b32 .debug_loc+859
 .b8 11
 .b8 106

 .b8 0
 .b32 2
 .b32 69
 .b32 1848
 .b32 .debug_loc+1275
 .b8 12
 .b8 100
 .b8 105
 .b8 97

 .b8 0
 .b32 109
 .b32 2
 .b32 65
 .b8 9
 .b8 3
 .b64 _ZZ13lud_perimeterPfiiE3dia
 .b8 8
 .b8 12
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 95
 .b8 114
 .b8 111
 .b8 119

 .b8 0
 .b32 109
 .b32 2
 .b32 66
 .b8 9
 .b8 3
 .b64 _ZZ13lud_perimeterPfiiE8peri_row
 .b8 8
 .b8 12
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 95
 .b8 99
 .b8 111
 .b8 108

 .b8 0
 .b32 109
 .b32 2
 .b32 67
 .b8 9
 .b8 3
 .b64 _ZZ13lud_perimeterPfiiE8peri_col
 .b8 8
 .b8 10
 .b64 tmp69
 .b64 tmp96
 .b8 10
 .b64 tmp81
 .b64 tmp96
 .b8 10
 .b64 tmp83
 .b64 tmp96
 .b8 10
 .b64 tmp84
 .b64 tmp96
 .b8 10
 .b64 tmp85
 .b64 tmp94
 .b8 13
 .b32 137
 .b64 tmp91
 .b64 tmp93
 .b32 2
 .b32 148
 .b8 9
 .b8 97

 .b8 0
 .b32 3
 .b32 4512
 .b32 91
 .b8 5
 .b8 144
 .b8 182
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 9
 .b8 98

 .b8 0
 .b32 3
 .b32 4512
 .b32 91
 .b8 5
 .b8 144
 .b8 184
 .b8 204
 .b8 149
 .b8 1
 .b8 2
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 8
 .b32 1651
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 101
 .b8 114
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 101
 .b8 114
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105

 .b8 0
 .b32 2
 .b32 173
 .b32 672
 .b8 1
 .b64 func_begin2
 .b64 func_end2
 .b8 1
 .b8 156
 .b8 9
 .b8 109

 .b8 0
 .b32 2
 .b32 173
 .b32 1838
 .b8 9
 .b8 3
 .b64 _Z12lud_internalPfii_param_0
 .b8 7
 .b8 9
 .b8 109
 .b8 97
 .b8 116
 .b8 114
 .b8 105
 .b8 120
 .b8 95
 .b8 100
 .b8 105
 .b8 109

 .b8 0
 .b32 2
 .b32 173
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z12lud_internalPfii_param_1
 .b8 7
 .b8 9
 .b8 111
 .b8 102
 .b8 102
 .b8 115
 .b8 101
 .b8 116

 .b8 0
 .b32 2
 .b32 173
 .b32 1848
 .b8 9
 .b8 3
 .b64 _Z12lud_internalPfii_param_2
 .b8 7
 .b8 10
 .b64 tmp115
 .b64 tmp126
 .b8 10
 .b64 tmp115
 .b64 tmp125
 .b8 10
 .b64 tmp115
 .b64 tmp125
 .b8 16
 .b8 103
 .b8 108
 .b8 111
 .b8 98
 .b8 97
 .b8 108
 .b8 95
 .b8 114
 .b8 111
 .b8 119
 .b8 95
 .b8 105
 .b8 100

 .b8 0
 .b32 2
 .b32 181
 .b32 1848
 .b8 5
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 16
 .b8 103
 .b8 108
 .b8 111
 .b8 98
 .b8 97
 .b8 108
 .b8 95
 .b8 99
 .b8 111
 .b8 108
 .b8 95
 .b8 105
 .b8 100

 .b8 0
 .b32 2
 .b32 182
 .b32 1848
 .b8 5
 .b8 144
 .b8 178
 .b8 228
 .b8 149
 .b8 1
 .b8 2
 .b8 11
 .b8 115
 .b8 117
 .b8 109

 .b8 0
 .b32 2
 .b32 179
 .b32 91
 .b32 .debug_loc+1391
 .b8 11
 .b8 105

 .b8 0
 .b32 2
 .b32 178
 .b32 1848
 .b32 .debug_loc+1455
 .b8 12
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 95
 .b8 114
 .b8 111
 .b8 119

 .b8 0
 .b32 109
 .b32 2
 .b32 175
 .b8 9
 .b8 3
 .b64 _ZZ12lud_internalPfiiE8peri_row
 .b8 8
 .b8 12
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 95
 .b8 99
 .b8 111
 .b8 108

 .b8 0
 .b32 109
 .b32 2
 .b32 176
 .b8 9
 .b8 3
 .b64 _ZZ12lud_internalPfiiE8peri_col
 .b8 8
 .b8 0
 .b8 0
 .b8 0
 .b8 0
 .b8 17
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 49
 .b8 69
 .b8 106
 .b8 106
 .b8 106

 .b8 0
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 49
 .b8 69
 .b8 106
 .b8 106
 .b8 106

 .b8 0
 .b32 4
 .b32 419
 .b32 672
 .b8 1
 .b8 17
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 50
 .b8 69
 .b8 106
 .b8 106
 .b8 106

 .b8 0
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 50
 .b8 69
 .b8 106
 .b8 106
 .b8 106

 .b8 0
 .b32 4
 .b32 421
 .b32 672
 .b8 1
 .b8 2
 .b8 117
 .b8 110
 .b8 115
 .b8 105
 .b8 103
 .b8 110
 .b8 101
 .b8 100
 .b8 32
 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b8 7
 .b32 4
 .b8 18
 .b32 1838
 .b8 100
 .b8 105
 .b8 109
 .b8 51

 .b8 0
 .b32 12
 .b32 4
 .b32 415
 .b8 19
 .b8 120

 .b8 0
 .b32 1739
 .b32 4
 .b32 417
 .b8 2
 .b8 35
 .b8 0
 .b8 1
 .b8 19
 .b8 121

 .b8 0
 .b32 1739
 .b32 4
 .b32 417
 .b8 2
 .b8 35
 .b8 4
 .b8 1
 .b8 19
 .b8 122

 .b8 0
 .b32 1739
 .b32 4
 .b32 417
 .b8 2
 .b8 35
 .b8 8
 .b8 1
 .b8 0
 .b8 20
 .b32 91
 .b32 8
 .b8 12
 .b8 2
 .b8 105
 .b8 110
 .b8 116

 .b8 0
 .b8 5
 .b32 4
 .b8 0
}
.section .debug_abbrev {
 .b8 1
 .b8 17
 .b8 1
 .b8 37
 .b8 8
 .b8 19
 .b8 11
 .b8 3
 .b8 8
 .b8 82
 .b8 1
 .b8 16
 .b8 6
 .b8 27
 .b8 8
 .b8 0
 .b8 0
 .b8 2
 .b8 36
 .b8 0
 .b8 3
 .b8 8
 .b8 62
 .b8 11
 .b8 11
 .b8 6
 .b8 0
 .b8 0
 .b8 3
 .b8 36
 .b8 0
 .b8 11
 .b8 6
 .b8 62
 .b8 11
 .b8 0
 .b8 0
 .b8 4
 .b8 1
 .b8 1
 .b8 1
 .b8 19
 .b8 73
 .b8 19
 .b8 0
 .b8 0
 .b8 5
 .b8 33
 .b8 0
 .b8 73
 .b8 19
 .b8 47
 .b8 6
 .b8 0
 .b8 0
 .b8 6
 .b8 46
 .b8 1
 .b8 1
 .b8 19
 .b8 135
 .b8 64
 .b8 8
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 32
 .b8 11
 .b8 0
 .b8 0
 .b8 7
 .b8 5
 .b8 0
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 0
 .b8 0
 .b8 8
 .b8 46
 .b8 1
 .b8 1
 .b8 19
 .b8 135
 .b8 64
 .b8 8
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 63
 .b8 12
 .b8 17
 .b8 1
 .b8 18
 .b8 1
 .b8 64
 .b8 10
 .b8 0
 .b8 0
 .b8 9
 .b8 5
 .b8 0
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 2
 .b8 10
 .b8 51
 .b8 11
 .b8 0
 .b8 0
 .b8 10
 .b8 11
 .b8 1
 .b8 17
 .b8 1
 .b8 18
 .b8 1
 .b8 0
 .b8 0
 .b8 11
 .b8 52
 .b8 0
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 2
 .b8 6
 .b8 0
 .b8 0
 .b8 12
 .b8 52
 .b8 0
 .b8 3
 .b8 8
 .b8 73
 .b8 19
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 2
 .b8 10
 .b8 51
 .b8 11
 .b8 0
 .b8 0
 .b8 13
 .b8 29
 .b8 1
 .b8 49
 .b8 19
 .b8 17
 .b8 1
 .b8 18
 .b8 1
 .b8 88
 .b8 6
 .b8 89
 .b8 6
 .b8 0
 .b8 0
 .b8 14
 .b8 5
 .b8 0
 .b8 49
 .b8 19
 .b8 2
 .b8 10
 .b8 51
 .b8 11
 .b8 0
 .b8 0
 .b8 15
 .b8 59
 .b8 0
 .b8 3
 .b8 8
 .b8 0
 .b8 0
 .b8 16
 .b8 52
 .b8 0
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 2
 .b8 10
 .b8 51
 .b8 11
 .b8 0
 .b8 0
 .b8 17
 .b8 46
 .b8 0
 .b8 135
 .b8 64
 .b8 8
 .b8 3
 .b8 8
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 73
 .b8 19
 .b8 63
 .b8 12
 .b8 0
 .b8 0
 .b8 18
 .b8 19
 .b8 1
 .b8 1
 .b8 19
 .b8 3
 .b8 8
 .b8 11
 .b8 6
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 0
 .b8 0
 .b8 19
 .b8 13
 .b8 0
 .b8 3
 .b8 8
 .b8 73
 .b8 19
 .b8 58
 .b8 6
 .b8 59
 .b8 6
 .b8 56
 .b8 10
 .b8 50
 .b8 12
 .b8 0
 .b8 0
 .b8 20
 .b8 15
 .b8 0
 .b8 73
 .b8 19
 .b8 11
 .b8 6
 .b8 51
 .b8 11
 .b8 0
 .b8 0
 .b8 0
}
.section .debug_pubnames {
 .b32 141
 .b8 2
 .b8 0
 .b32 .debug_info
 .b32 1855
 .b32 1695
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 50
 .b8 69
 .b8 106
 .b8 106
 .b8 106
 .b8 0

 .b32 137
 .b8 102
 .b8 100
 .b8 105
 .b8 118
 .b8 105
 .b8 100
 .b8 101
 .b8 102
 .b8 0

 .b32 1252
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 105
 .b8 110
 .b8 116
 .b8 101
 .b8 114
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105
 .b8 0

 .b32 678
 .b8 95
 .b8 90
 .b8 49
 .b8 51
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 112
 .b8 101
 .b8 114
 .b8 105
 .b8 109
 .b8 101
 .b8 116
 .b8 101
 .b8 114
 .b8 80
 .b8 102
 .b8 105
 .b8 105
 .b8 0

 .b32 204
 .b8 95
 .b8 90
 .b8 49
 .b8 50
 .b8 108
 .b8 117
 .b8 100
 .b8 95
 .b8 100
 .b8 105
 .b8 97
 .b8 103
 .b8 111
 .b8 110
 .b8 97
 .b8 108
 .b8 80
 .b8 102
 .b8 105
 .b8 105
 .b8 0

 .b32 1651
 .b8 95
 .b8 90
 .b8 78
 .b8 52
 .b8 100
 .b8 105
 .b8 109
 .b8 51
 .b8 67
 .b8 49
 .b8 69
 .b8 106
 .b8 106
 .b8 106
 .b8 0

 .b32 0
}
.section .debug_loc {
 .b64 tmp1
 .b64 tmp5
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp5
 .b64 tmp31
 .b8 6
 .b8 0
 .b8 144
 .b8 176
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp31
 .b64 tmp34
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp34
 .b64 func_end0
 .b8 6
 .b8 0
 .b8 144
 .b8 181
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp3
 .b64 tmp6
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp6
 .b64 tmp9
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp9
 .b64 tmp29
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp29
 .b64 tmp32
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp32
 .b64 tmp35
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp35
 .b64 func_end0
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp12
 .b64 tmp15
 .b8 6
 .b8 0
 .b8 144
 .b8 178
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp15
 .b64 tmp23
 .b8 6
 .b8 0
 .b8 144
 .b8 178
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp23
 .b64 tmp26
 .b8 6
 .b8 0
 .b8 144
 .b8 179
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp26
 .b64 func_end0
 .b8 6
 .b8 0
 .b8 144
 .b8 179
 .b8 234
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp40
 .b64 tmp55
 .b8 5
 .b8 0
 .b8 144
 .b8 177
 .b8 228
 .b8 149
 .b8 1
 .b64 tmp55
 .b64 tmp71
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp71
 .b64 tmp82
 .b8 6
 .b8 0
 .b8 144
 .b8 183
 .b8 228
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp82
 .b64 tmp99
 .b8 6
 .b8 0
 .b8 144
 .b8 180
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp99
 .b64 tmp106
 .b8 6
 .b8 0
 .b8 144
 .b8 177
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp106
 .b64 func_end1
 .b8 6
 .b8 0
 .b8 144
 .b8 184
 .b8 232
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp41
 .b64 tmp45
 .b8 7
 .b8 0
 .b8 144
 .b8 180
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp45
 .b64 tmp48
 .b8 7
 .b8 0
 .b8 144
 .b8 180
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp48
 .b64 tmp52
 .b8 7
 .b8 0
 .b8 144
 .b8 182
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp52
 .b64 tmp56
 .b8 7
 .b8 0
 .b8 144
 .b8 182
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp56
 .b64 tmp59
 .b8 7
 .b8 0
 .b8 144
 .b8 184
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp59
 .b64 tmp62
 .b8 7
 .b8 0
 .b8 144
 .b8 184
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp62
 .b64 tmp66
 .b8 7
 .b8 0
 .b8 144
 .b8 176
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp66
 .b64 tmp100
 .b8 7
 .b8 0
 .b8 144
 .b8 176
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp100
 .b64 tmp103
 .b8 7
 .b8 0
 .b8 144
 .b8 182
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp103
 .b64 tmp107
 .b8 7
 .b8 0
 .b8 144
 .b8 182
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp107
 .b64 tmp111
 .b8 7
 .b8 0
 .b8 144
 .b8 184
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp111
 .b64 func_end1
 .b8 7
 .b8 0
 .b8 144
 .b8 184
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 0
 .b64 0
 .b64 tmp43
 .b64 tmp46
 .b8 7
 .b8 0
 .b8 144
 .b8 179
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp46
 .b64 tmp50
 .b8 7
 .b8 0
 .b8 144
 .b8 179
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp50
 .b64 tmp53
 .b8 7
 .b8 0
 .b8 144
 .b8 181
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp53
 .b64 tmp57
 .b8 7
 .b8 0
 .b8 144
 .b8 181
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp57
 .b64 tmp60
 .b8 7
 .b8 0
 .b8 144
 .b8 183
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp60
 .b64 tmp64
 .b8 7
 .b8 0
 .b8 144
 .b8 183
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp64
 .b64 tmp67
 .b8 7
 .b8 0
 .b8 144
 .b8 185
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp67
 .b64 tmp73
 .b8 7
 .b8 0
 .b8 144
 .b8 185
 .b8 224
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp73
 .b64 tmp80
 .b8 7
 .b8 0
 .b8 144
 .b8 177
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp80
 .b64 tmp84
 .b8 7
 .b8 0
 .b8 144
 .b8 177
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp84
 .b64 tmp95
 .b8 7
 .b8 0
 .b8 144
 .b8 179
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp95
 .b64 tmp101
 .b8 7
 .b8 0
 .b8 144
 .b8 179
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp101
 .b64 tmp104
 .b8 7
 .b8 0
 .b8 144
 .b8 181
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp104
 .b64 tmp109
 .b8 7
 .b8 0
 .b8 144
 .b8 181
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp109
 .b64 tmp112
 .b8 7
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp112
 .b64 func_end1
 .b8 7
 .b8 0
 .b8 144
 .b8 183
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 0
 .b64 0
 .b64 tmp75
 .b64 tmp78
 .b8 7
 .b8 0
 .b8 144
 .b8 178
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp78
 .b64 tmp86
 .b8 7
 .b8 0
 .b8 144
 .b8 178
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp86
 .b64 tmp89
 .b8 7
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 tmp89
 .b64 func_end1
 .b8 7
 .b8 0
 .b8 144
 .b8 180
 .b8 226
 .b8 196
 .b8 145
 .b8 215
 .b8 4
 .b64 0
 .b64 0
 .b64 tmp118
 .b64 tmp122
 .b8 6
 .b8 0
 .b8 144
 .b8 178
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 tmp122
 .b64 func_end2
 .b8 6
 .b8 0
 .b8 144
 .b8 178
 .b8 226
 .b8 152
 .b8 171
 .b8 2
 .b64 0
 .b64 0
 .b64 tmp120
 .b64 tmp123
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 tmp123
 .b64 func_end2
 .b8 6
 .b8 0
 .b8 144
 .b8 185
 .b8 230
 .b8 200
 .b8 171
 .b8 2
 .b64 0
 .b64 0
}
.section .debug_ranges {
}

